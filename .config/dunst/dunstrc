[global]
    # Corner radius in pixels:
    corner_radius = 4

    # Truncate at the end:
    ellipsize = end

    # Enable recursive icon lookup:
    enable_recursive_icon_lookup = true

    # Display notifications on the focused monitor:
    follow = keyboard

    # Font:
    font = Cartograph CF 9

    # The format of the message:
    format = "(<i>%a</i>) <b>%s</b>\n%b"

    # Thin purple border:
    frame_color = "#D0B5F3"
    frame_width = 1

    # Space between notifications:
    gap_size = 4

    # Constant height:
    height = 300

    # Set icon theme:
    icon_theme = Win10Sur-dark

    # Show how many messages are currently hidden (because of notification_limit).
    indicate_hidden = yes

    # Support Pango markup:
    markup = full

    # Don't make icons huge:
    max_icon_size = 28

    # Mouse events:
    mouse_left_click = do_action
    mouse_right_click = close_current

    # Maximum number of notifications:
    notification_limit = 10

    # Position the notification in the bottom right corner:
    offset = 10x10
    origin = bottom-right

    # Dynamic width:
    width = (50, 300)

    ### Progress bar ###

    # Turn on the progress bar. It appears when a progress hint is passed with
    # for example dunstify -h int:value:12
    # progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    # progress_bar_height = 10

    # Set the frame width of the progress bar
    # progress_bar_frame_width = 1

    # Set the minimum width for the progress bar
    # progress_bar_min_width = 150

    # Set the maximum width for the progress bar
    # progress_bar_max_width = 300

    # Corner radius for the progress bar. 0 disables rounded corners.
    # progress_bar_corner_radius = 0

    # Define which corners to round when drawing the progress bar. If progress_bar_corner_radius
    # is set to 0 this option will be ignored.
    # progress_bar_corners = all

    # Display indicators for URLs (U) and actions (A).
    # show_indicators = yes

    # dmenu path.
    # dmenu = /usr/bin/dmenu -p dunst:

# Urgency sections:
[urgency_low]
    background = "#000000CC"
    foreground = "#BCF4F5"
    timeout = 10
    default_icon = $HOME/.local/share/icons/Win10Sur-dark/actions/symbolic/help-info-symbolic.svg
[urgency_normal]
    background = "#000000CC"
    foreground = "#F6F6F5"
    timeout = 10
    default_icon = $HOME/.local/share/icons/Win10Sur-dark/actions/symbolic/help-info-symbolic.svg
[urgency_critical]
    background = "#000000CC"
    foreground = "#E7A1D7"
    timeout = 20
    default_icon = $HOME/.local/share/icons/Win10Sur-dark/actions/symbolic/help-info-symbolic.svg

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#    override_pause_level
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# You can also allow a notification to appear even when paused. Notification will appear whenever notification's override_pause_level >= dunst's paused level.
# This can be used to set partial pause modes, where more urgent notifications get through, but less urgent stay paused. To do that, you can override the following in the rules:
# override_pause_level = X

# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"

# vim: ft=cfg
